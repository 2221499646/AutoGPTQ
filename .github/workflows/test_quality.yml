name: check_code_quality

on:
  push:
    branches: [ main ]
    paths:
      - "auto_gptq/**.py"
      - "tests/**.py"
      - "examples/**.py"
      - "setup.py"

  pull_request:
    branches: [ main ]
    paths:
      - "auto_gptq/**.py"
      - "tests/**.py"
      - "examples/**.py"
      - "setup.py"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
  
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          activate-environment: "build"
          python-version: ${{ matrix.python-version }}
          mamba-version: "*"
          use-mamba: false
          channels: conda-forge,defaults
          channel-priority: true
          add-pip-as-python-dependency: true
          auto-activate-base: false

      - name: Install dependencies
        run: |
            conda install cuda-toolkit -c "nvidia/label/cuda-12.1.0"

            # Refer to https://pytorch.org/get-started/locally/
            if ("${{ runner.os }}" -eq "Linux")
            {
              python -m pip install torch
            }else{
              python -m pip install torch --index-url https://download.pytorch.org/whl/cu121
            }
          
          python -m pip install --upgrade build setuptools wheel numpy

      - name: Check install
        run: |
          python -c "import torch; print('torch version:', torch.__version__)"

      - name: Install AutoGPTQ
        run: |
          DISABLE_QIGEN=1 pip install -vvv .[quality]
      
      - name: Check style with ruff
        run: |
          source venv/bin/activate
          ruff .
